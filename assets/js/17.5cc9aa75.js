(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{364:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据库相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库相关"}},[t._v("#")]),t._v(" 数据库相关")]),t._v(" "),a("h2",{attrs:{id:"数据库设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计模式"}},[t._v("#")]),t._v(" 数据库设计模式")]),t._v(" "),a("ol",[a("li",[t._v("主拓展模式")])]),t._v(" "),a("p",[t._v("一般应用于提取不同类型的对象的共同特征，比如在学校中，课程包含老师、学生;工厂有产品、人员。对于上面系统的设计设计人员表：user、teacher、student的单独成表。维护同样的userid同时作为二者主键。称为1对1关系。这被称为主扩展模式。")]),t._v(" "),a("p",[t._v("扩展表的主键既是扩展表的主键也是主表的外键")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("主从模式")])]),t._v(" "),a("p",[t._v("主从模式的应用场景最多。是典型的一对多的关系。比如贴吧的实现，整个吧就是一个主表。而贴吧有许多的从表就是不同楼主发的帖子，而每个帖子有用很多从表那就是每个楼所对应的信息。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("名值关系\n　　主要处理系统设计阶段还不能完全确定的属性的对象。这些对象的属性在系统运行时会有很大的变更，或者是多个对象之间的属性存在很大的差异。\n　　比如说一个学生的表，记录了一些学生必须有的属性：年龄身高体重姓名什么的。但是突然有一天有一个人穿越了，他就需要一个剑术值的数据。通常需要额外两个表来存储这种不确定是否会用会有的属性。")])]),t._v(" "),a("p",[t._v("首先需要一个属性模版表，就是不管这个属性属于谁，属于何物，何时，我只是证明有这么一条额外属性而存在。那么上述的例子当中，属性模板表当中就需要添加一条属性：（属性代码一般给属性分类用）")]),t._v(" "),a("p",[t._v("ID 1 属性代码 1001 属性名称 剑术值")]),t._v(" "),a("p",[t._v("但是具体剑术值是多少，这个表不去讨论。存储数据的表称为额外属性表，这个表存储的字段分别标识")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("这条数据属于哪个人、物（角色id）")])]),t._v(" "),a("li",[a("p",[t._v("这条数据是什么属性 （属性模板ID）")])]),t._v(" "),a("li",[a("p",[t._v("属性的具体值是多少 （data)")])]),t._v(" "),a("li",[a("p",[t._v("多对多关系\n多对多模式，也是比较常见的一种数据库设计模式，它所描述的两个对象不分主次、地位对等、互为一对多的关系。对于A表来说，一条记录对应着B表的多条记录，反过来对于B表来说，一条记录也对应着A表的多条记录，这种情况就是“多对多模式”。这个主要可以细分成两种情况。取决于关联表有没有业务需求。")])])]),t._v(" "),a("h3",{attrs:{id:"数据库设计范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计范式"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/wsg25/p/9615100.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库设计范式"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。")]),t._v(" "),a("p",[t._v("而通常我们用的最多的就是第一范式（1NF）、第二范式（2NF）、第三范式（3NF），也就是本文要讲的“三大范式”。")]),t._v(" "),a("ul",[a("li",[t._v("第一范式（1NF）：要求数据库表的每一列都是不可分割的原子数据项。")])]),t._v(" "),a("p",[t._v("举例说明：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("学号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("姓名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("性别")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("年龄")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("家庭")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("学校")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("female")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("北京")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研二、me")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001002")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("male")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3口人、上海")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研二、me")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001003")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("female")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("25")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4口人、武汉")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研三、ee")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001004")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("female")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("22")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3口人、广州")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研一、cs")])])])]),t._v(" "),a("p",[t._v('上面表中的"家庭"、"学校"均不满足第一范式。因此调整如下：')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("学号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("姓名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("性别")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("年龄")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("家庭人口")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("专业")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("年级")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("female")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5口人")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("me")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研二")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001002")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("male")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3口人")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("me")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研二")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001003")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("female")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("25")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4口人")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("mee")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研三")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("20191001004")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("xx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("female")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("22")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3口人")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cs")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("研一")])])])]),t._v(" "),a("ul",[a("li",[t._v("第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）")])]),t._v(" "),a("p",[t._v("第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("订单号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("产品号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("产品数量")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("产品折扣")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("产品价格")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("订单金额")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("订单时间")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2008003")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("205")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("100")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8.9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2870")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20080103")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2008003")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("206")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("200")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("9.9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2870")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20080103")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2008005")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("206")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("500")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.75")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2870")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20080103")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2008006")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("206")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("400")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.88")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2870")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20080103")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2008008")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("209")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1000")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.95")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2870")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2008008")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("210")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("140")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.95")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2870")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20080213")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("2008008")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("211")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("350")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("10.9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2870")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20080403")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/database-design-formula-2-.png",alt:""}})]),t._v(" "),a("p",[t._v("在上图所示的情况中，同一个订单中可能包含不同的产品，因此主键必须是“订单号”和“产品号”联合组成，")]),t._v(" "),a("p",[t._v("但可以发现，产品数量、产品折扣、产品价格与“订单号”和“产品号”都相关，但是订单金额和订单时间仅与“订单号”相关，与“产品号”无关，")]),t._v(" "),a("p",[t._v("这样就不满足第二范式的要求，调整如下，需分成两个表：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/database-design-formula-2.png",alt:""}}),t._v(" "),a("img",{attrs:{src:"/images/database-design-formula-2-2.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("第三范式（3NF）：在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）")])]),t._v(" "),a("p",[t._v("第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/database-design-formula-3-1.png",alt:""}}),t._v("\n上表中，所有属性都完全依赖于学号，所以满足第二范式，但是“班主任性别”和“班主任年龄”直接依赖的是“班主任姓名”，")]),t._v(" "),a("p",[t._v("而不是主键“学号”，所以需做如下调整：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/database-design-formula-3-2.png",alt:""}})]),t._v(" "),a("p",[t._v("这样以来，就满足了第三范式的要求。")]),t._v(" "),a("p",[t._v("ps:如果把上表中的班主任姓名改成班主任教工号可能更确切，更符合实际情况，不过只要能理解就行。")]),t._v(" "),a("h3",{attrs:{id:"数据库五大约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库五大约束"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/zhouguowei/p/9268788.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库五大约束"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("数据库中的五大约束包括：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("主键约束（Primay Key Coustraint） 唯一性，非空性；")])]),t._v(" "),a("li",[a("p",[t._v("唯一约束 （Unique Counstraint）唯一性，可以空，但只能有一个；")])]),t._v(" "),a("li",[a("p",[t._v("默认约束 (Default Counstraint) 该数据的默认值；")])]),t._v(" "),a("li",[a("p",[t._v("外键约束 (Foreign Key Counstraint) 需要建立两表间的关系；")])]),t._v(" "),a("li",[a("p",[t._v("非空约束（Not Null Counstraint）:设置非空约束，该字段不能为空。")])])]),t._v(" "),a("h2",{attrs:{id:"sql语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql语句"}},[t._v("#")]),t._v(" SQL语句")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_36344771/article/details/81485063",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.SQL高级教程"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"sql-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-join"}},[t._v("#")]),t._v(" SQL JOIN")]),t._v(" "),a("p",[t._v("join可以从两个表或者多个表中列的关系，查询数据")]),t._v(" "),a("h4",{attrs:{id:"sql-inner-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-inner-join"}},[t._v("#")]),t._v(" SQL inner join")]),t._v(" "),a("p",[t._v("inner join 与join是相同的")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" table_name2 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" table_name1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("table_name2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_name\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"sql-left-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-left-join"}},[t._v("#")]),t._v(" SQL left join")]),t._v(" "),a("p",[t._v("left join关键字从坐标 返回所有的行（左表没有匹配项也会出现)")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Persons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Persons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderNo\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Persons\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Persons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id_P"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id_P\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Persons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastName\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"sql-rightjoin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-rightjoin"}},[t._v("#")]),t._v(" SQL rightjoin")]),t._v(" "),a("p",[t._v("right join关键字从右表中返回所有的行（即使右表没有匹配行）")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" table_name2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" table_name1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" table_name2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column_name\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"sql-union-和-union-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-union-和-union-all"}},[t._v("#")]),t._v(" SQL union 和 union all")]),t._v(" "),a("p",[t._v("UNION 操作符用于合并两个或多个 SELECT 语句的结果集。\n请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。\nUNION")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name2\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("UNION ALL")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name2\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h4",{attrs:{id:"sql-select-into"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-select-into"}},[t._v("#")]),t._v(" SQL SELECT INTO")]),t._v(" "),a("p",[t._v("SELECT INTO 语句从一个表中选取数据，然后把数据插入另一个表中。\nSELECT INTO 语句常用于创建表的备份复件或者用于对记录进行存档。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INTO")]),t._v(" new_table_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IN")]),t._v(" externaldatabase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FROM")]),t._v(" old_tablename\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("利用select into制作备份")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Persons "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Backup.mdb'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Persons\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("希望拷贝某些域，可以在SELECT语句后面列出这些域")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" LastFirst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FirstName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Person_backup\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Persons\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("在SELECT INTO 后面添加WHERE子句")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INTO")]),t._v(" Person_backup\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FROM")]),t._v(" Perons\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WHERE")]),t._v(" City"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Chongqing"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"sql-create-table语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-create-table语句"}},[t._v("#")]),t._v(" SQL create table语句")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名称\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      列名称"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      列名称"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      列名称"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("常用数据类型如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("数据类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("integer(size) int(size) smallint(size) tinyint(size)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("仅容纳整数。在括号内规定数字的最大位数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("decimal(size,d) numeric(size,d)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("容纳带有小数的数字。 “size” 规定数字的最大位数。”d” 规定小数点右侧的最大位数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("char(size)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("容纳固定长度的字符串（可容纳字母、数字以及特殊字符）。 在括号中规定字符串的长度。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("varchar(size)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("容纳可变长度的字符串（可容纳字母、数字以及特殊的字符）。 在括号中规定字符串的最大长度。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("date(yyyymmdd)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("容纳日期。")])])])]),t._v(" "),a("p",[t._v('创建table实例，Person表包含5个列，列名如下："Id_P","LastName","FirstName","Address","City"')]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Persons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Id_P "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      FirstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h4",{attrs:{id:"sql-not-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-not-null"}},[t._v("#")]),t._v(" SQL NOT NULL")]),t._v(" "),a("p",[t._v("NOT NULL 约束强制列不接受 NULL 值。\nNOT NULL 约束强制字段始终包含值。这意味着，如果不向字段添加值，就无法插入新记录或者更新记录。")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Id_P "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      FirstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h4",{attrs:{id:"sql-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-foreign-key"}},[t._v("#")]),t._v(" SQL FOREIGN KEY")]),t._v(" "),a("p",[t._v("一个表中的 FOREIGN KEY 指向另一个表中的 PRIMARY KEY。\n让我们通过一个例子来解释外键。请看下面两个表：\nFOREIGN KEY 约束用于预防破坏表之间连接的动作。")]),t._v(" "),a("p",[t._v("FOREIGN KEY 约束也能防止非法数据插入外键列，因为它必须是它指向的那个表中的值之一。\n下面的 SQL 在 “Orders” 表创建时为 “Id_P” 列创建 FOREIGN KEY：\nMySQL:")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Id_O "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      OrderNo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Id_P "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id_O"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id_P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" Persons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id_P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("SQL SERVER /Oracle/MS Acess")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Id_O "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      OrderNo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Id_P "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" Persons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id_P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"sql-check"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-check"}},[t._v("#")]),t._v(" SQL CHECK")]),t._v(" "),a("p",[t._v("CHECK 约束用于限制列中的值的范围。\n如果对单个列定义 CHECK 约束，那么该列只允许特定的值。\n如果对一个表定义 CHECK 约束，那么此约束会在特定的列中对值进行限制。\n下面的 SQL 在 “Persons” 表创建时为 “Id_P” 列创建 CHECK 约束。CHECK 约束规定 “Id_P” 列必须只包含大于 0 的整数。\nMySQL")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Id_P "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      FirstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHECK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id_P"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("SQL SERVER /Oracle/MS Acess")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Persons\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Id_P "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id_P"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      FirstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"sql-default-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-default-约束"}},[t._v("#")]),t._v(" SQL DEFAULT 约束")]),t._v(" "),a("p",[t._v("DEFAULT 约束用于向列中插入默认值。如果没有规定其他的值，那么会将默认值添加到所有的新记录。")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Persons\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Id_P "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      FirstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Sandnes'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"sql-create-index语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-create-index语句"}},[t._v("#")]),t._v(" SQL CREATE INDEX语句")]),t._v(" "),a("p",[t._v("CREATE INDEX 语句用于在表中创建索引。在不读取整个表的情况下，索引使数据库应用程序可以更快地查找数据。\n索引您可以在表中创建索引，以便更加快速高效地查询数据。用户无法看到索引，它们只能被用来加速搜索/查询。")]),t._v(" "),a("p",[t._v("SQL 撤销索引、表以及数据库\n通过使用 DROP 语句，可以轻松地删除索引、表和数据库。")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名称\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATABASE")]),t._v(" 数据库名称\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"sql-truncate-table语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-truncate-table语句"}},[t._v("#")]),t._v(" SQL TRUNCATE TABLE语句")]),t._v(" "),a("p",[t._v("需要除去表内的数据，但并不删除表本身\n请使用 TRUNCATE TABLE 命令（仅仅删除表格中的数据）：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRUNCATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名称\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"sql-alter-table语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-alter-table语句"}},[t._v("#")]),t._v(" SQL ALTER TABLE语句")]),t._v(" "),a("p",[t._v("ALTER TABLE 语句用于在已有的表中添加、修改或删除列。\nSQL ALTER TABLE 语法\n如需在表中添加列，请使用下列语法:")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" column_name datatype\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("要删除表中的列，请使用下列语法")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" table_name \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" column_name\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"sql-auto-increment-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-auto-increment-字段"}},[t._v("#")]),t._v(" SQL AUTO INCREMENT 字段")]),t._v(" "),a("p",[t._v("Auto-increment 会在新记录插入表中时生成一个唯一的数字。我们通常希望在每次插入新记录时，自动地创建主键字段的值。我们可以在表中创建一个 auto-increment 字段。\n下列 SQL 语句把 “Persons” 表中的 “P_Id” 列定义为 auto-increment 主键：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Persons\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      P_Id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      FirstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("P_Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("MySQL 使用 AUTO_INCREMENT 关键字来执行 auto-increment 任务。\n默认地，AUTO_INCREMENT 的开始值是 1，每条新记录递增 1。\n要让 AUTO_INCREMENT 序列以其他的值起始，请使用下列 SQL 语法：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Persons "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("要在 “Persons” 表中插入新记录，我们不必为 “P_Id” 列规定值（会自动添加一个唯一的值）：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Persons "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bill'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Gates'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("上面的 SQL 语句会在 “Persons” 表中插入一条新记录。”P_Id” 会被赋予一个唯一的值。”FirstName” 会被设置为 “Bill”，”LastName” 列会被设置为 “Gates”。")]),t._v(" "),a("h4",{attrs:{id:"sql-create-view-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-create-view-语句"}},[t._v("#")]),t._v(" SQL CREATE VIEW 语句")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v(" view_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" condition\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"sql-create-view实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-create-view实例"}},[t._v("#")]),t._v(" SQL CREATE VIEW实例")]),t._v(" "),a("p",[t._v("可以从某个查询内部、某个存储过程内部，或者从另一个视图内部来使用视图。通过向视图添加函数、join 等等，我们可以向用户精确地提交我们希望提交的数据。")]),t._v(" "),a("p",[t._v("样本数据库 Northwind 拥有一些被默认安装的视图。视图 “Current Product List” 会从 Products 表列出所有正在使用的产品。这个视图使用下列 SQL 创建：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Current")]),t._v(" Product List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ProductID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ProductName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Products\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Discontinued"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("No")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("查询上面的视图")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Current")]),t._v(" Product List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/DARWIN_YU/article/details/1608653",target:"_blank",rel:"noopener noreferrer"}},[t._v("2.必学高级SQL语句"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://blog.csdn.net/qq_41582642/article/details/82625104",target:"_blank",rel:"noopener noreferrer"}},[t._v("3.SQL最全基础教程(有本事别看啊!)"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);